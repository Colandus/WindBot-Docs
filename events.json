[
	{
		"rettype": "subtitle",
		"noIndex": true,
		"description": "Character Events",
		"exDescription": "These functions issue an event related to your character's control."
	},
	{
		"rettype": null,
		"name": "logout",
		"args": [],
		"description": "Logs you out by pressing CTRL+L.",
		"ex": null,
		"exDescription": null
	},
	{
		"rettype": null,
		"name": "closeclient",
		"args": [],
		"description": "Closes the Tibia Client.",
		"ex": "auto(100)\nif paround(9) > 0 then\n\tif $battlesigned then\n\t\tlogout()\n\telse\n\t\tcloseclient()\n\tend\nend",
		"exDescription": "Each 100 milliseconds, it will check if there's a player on your screen. If so, it will check if you are battle signed (can logout or not). If you can, it will simply logout, by pressing CTRL+L, otherwise, it will shut the client down."
	},
	{
		"rettype": null,
		"name": "connect",
		"args": [
			{
				"type": "string",
				"name": "account"
			},
			{
				"type": "string",
				"name": "password"
			},
			{
				"type": "string",
				"name": "charname"
			}
		],
		"description": "Connects you to the game world on the specified <i>account</i>, <i>password</i> and <i>charname</i>.",
		"ex": "connect('123456', '654321', 'Bubble')",
		"exDescription": "Will log in to the account/password: 123456/654321, and then choose the character 'Bubble' and enter the game world."
	},
	{
		"rettype": null,
		"name": "reconnect",
		"args": [],
		"description": "Reconnects you to the game world on last character played.",
		"ex": "auto(2500)\nif not $connected then\n\treconnect()\nend",
		"exDescription": "Each 2500 milliseconds, it will check if you are connected. If not, it will reconnect to the last character you logged in."
	},
	{
		"rettype": null,
		"name": "dismount",
		"args": [],
		"description": "Dismounts your character from your currently mounted animal.",
		"ex": "if $mounted then\n\tdismount()\nend",
		"exDescription": "Will check if you are currently mounting an animal. If so, it will dismount."
	},
	{
		"rettype": null,
		"name": "mount",
		"args": [],
		"description": "Mounts your character on the creature that is set as your mount in the client.",
		"ex": "auto(1000,2500)\nif not ($inpz or $mounted) then\n\tmount()\nend",
		"exDescription": "Each 1000~2500 milliseconds, it will check you are not inside a protection zone and not mounted. If so, it will mount on the last mounted animal."
	},
	{
		"rettype": null,
		"name": "move",
		"args": [
			{
				"type": "string",
				"name": "direction"
			}
		],
		"description": "Moves your character in the specified direction. <i>direction</i> can be: 'n', 'e', 's', 'w', 'ne', 'se', 'sw' or 'nw'.",
		"ex": "auto(100)\nif not $inpz and paround(9) > 0 then\n\tmove('s') wait(300,500)\nend",
		"exDescription": "Each 100 milliseconds, it will check if there's a player on screen and you are not inside a protection zone yet. If so, it will move to the south."
	},
	{
		"rettype": null,
		"name": "moveto",
		"args": [
			{
				"type": "number",
				"name": "x"
			},
			{
				"type": "number",
				"name": "y"
			},
			{
				"type": "number",
				"name": "z"
			}
		],
		"description": "Moves your character to the specified coordinates <i>x</i>, <i>y</i> and <i>z</i>.",
		"ex": "moveto(12345, 54321, 7)",
		"exDescription": "Will move your character to the location x:12345, y:54321, z:7."
	},
	{
		"rettype": null,
		"name": "reachlocation",
		"args": [
			{
				"type": "number",
				"name": "x"
			},
			{
				"type": "number",
				"name": "y"
			},
			{
				"type": "number",
				"name": "z"
			}
		],
		"description": "Moves your character near the specified coordinates <i>x</i>, <i>y</i> and <i>z</i> without actually stepping on them.",
		"ex": "reachlocation(12345, 54321, 7)",
		"exDescription": "Will move your character close to the location x:12345, y:54321, z:7."
	},
	{
		"rettype": null,
		"name": "setattackmode",
		"args": [
			{
				"type": "string",
				"name": "attackmode"
			},
			{
				"type": "string",
				"name": "chasemode"
			}
		],
		"description": "Sets the attack mode to <i>attackmode</i> and chase mode to <i>chasemod</i>. <i>attackmode</i> can be 'offensive', 'balanced' or 'defensive'. <i>chasemode</i> can be 'stand' or 'chase'.",
		"ex": "setattackmode('offensive', 'chase')",
		"exDescription": "Sets the client's attack mode to chase/offensive."
	},
	{
		"rettype": null,
		"name": "turn",
		"args": [
			{
				"type": "string",
				"name": "direction"
			}
		],
		"description": "Faces your character to the specified direction. <i>direction</i> can be: 'n', 'e', 's' or 'w'.",
		"ex": "turn('w') wait(100, 150)\ncast('exani hur up') wait(100, 150)",
		"exDescription": "Will turn to the west and cast 'levitate' spell."
	},
	{
		"rettype": "subtitle",
		"noIndex": true,
		"description": "Item Events",
		"exDescription": "These functions issue an event related to item manipulations."
	},
	{
		"rettype": null,
		"name": "buyitems",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "number",
				"name": "count"
			}
		],
		"description": "Buys <i>count</i> amount of items named <i>itemname</i>, which must be exactly the way it appears in the trade list. A trade window must be open.",
		"ex": "buyitems('mana potion', 100)",
		"exDescription": "Will buy 100 'mana potions'."
	},
	{
		"rettype": null,
		"name": "buyitems",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "number",
				"name": "count"
			}
		],
		"alternative": true,
		"description": "Buys <i>count</i> amount of items with id <i>itemid</i>. A trade window must be open.",
		"ex": "buyitems(268, 100)",
		"exDescription": "Will buy 100 items of id 268 (mana potion)."
	},
	{
		"rettype": null,
		"name": "closewindows",
		"args": [
			{
				"type": "optional string",
				"name": "locationname"
			},
			{
				"type": "optional boolean",
				"name": "onlyone"
			}
		],
		"description": "Closes all windows that fit the description of <i>locationname</i>. If <i>locationname</i> is not specified, all windows are closed. If <i>onlyone</i> is specified as true, then only one matching window is closed.",
		"ex": "closewindows('yellow backpack', true)",
		"exDescription": "Will close the first 'yellow backpack'."
	},
	{
		"rettype": null,
		"name": "contextmenu",
		"args": [
			{
				"type": "string",
				"name": "menuitem"
			},
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "index"
			}
		],
		"description": "Opens a context menu on item id <i>itemid</i> and clicks on the menu item with text <i>menuitem</i>. If you pass 0 for <i>itemid</i> and <i>sourcelocation</i> is a ground location, any item at that location will have the context menu opened on it. You can also optionally specify which item to open in sequence by passing the <i>index</i> parameter (1st item, 2nd item... etc) for items located in container windows.",
		"ex": "contextmenu('Look', 0, ground($posx, $posy + 1, $posz))",
		"exDescription": "Will right click the SQM south of you, and click 'Look'."
	},
	{
		"rettype": null,
		"name": "contextmenu",
		"args": [
			{
				"type": "string",
				"name": "menuitem"
			},
			{
				"type": "creature",
				"name": "creaturepointer"
			},
			{
				"type": "optional boolean",
				"name": "usebattlelist"
			}
		],
		"alternative": true,
		"description": "Opens a context menu on creature <i>creaturepointer</i> and clicks on the menu item with text <i>menuitem</i>. It will use the the battle list if <i>usebattlelist</i> is set to <i>true</i> (recommended, since no need to press ctrl key).",
		"ex": "contextmenu('Look', $followed)",
		"exDescription": "Will right click the character you're following and click 'Look'."
	},
	{
		"rettype": null,
		"name": "contextmenu",
		"args": [
			{
				"type": "string",
				"name": "menuitem"
			},
			{
				"type": "string",
				"name": "creaturename"
			},
			{
				"type": "optional boolean",
				"name": "usebattlelist"
			}
		],
		"alternative": true,
		"description": "Opens a context menu on creature with name <i>creaturename</i> and clicks on the menu item with text <i>menuitem</i>. It will use the the battle list if <i>usebattlelist</i> is set to <i>true</i> (recommended, since no need to press ctrl key).",
		"ex": "contextmenu('Copy Name', 'Cachero', true)",
		"exDescription": "Will right click the player named 'Cachero' through the battlelist, and click 'Copy Name'."
	},
	{
		"rettype": null,
		"name": "eatfood",
		"args": [],
		"description": "Eats a food item available out of one of your open backpacks.",
		"ex": "auto(60000, 120000)\nfor i = 1, 5 do\n\teatfood()\nend",
		"exDescription": "Each 60 ~ 120 seconds, will try to eat food 5 times."
	},
	{
		"rettype": null,
		"name": "equipitem",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "string",
				"name": "equipslot"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "count"
			}
		],
		"description": "Equips the item <i>itemname</i> to inventory slot <i>equipslot</i>. Slot is a location string and can be 'rhand', 'ring', 'belt', etc.. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. Also, you can provide how many items to move by providing the <i>count</i> parameter.",
		"ex": "auto(1000)\nif $rhand.count < 10\n\tequipitem('assassin star', 'rhand', 'blue backpack', 100)\nend",
		"exDescription": "Each 1 second, will reequip 'assassin stars' if you're with low ammo."
	},
	{
		"rettype": null,
		"name": "equipitem",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "string",
				"name": "equipslot"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "count"
			}
		],
		"alternative": true,
		"description": "Equips item of id <i>itemid</i> to inventory slot <i>equipslot</i>. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. Also, you can provide how many items to move by providing the <i>count</i> parameter.",
		"ex": "auto(1000)\nif $target.name == 'Ghost' and $rhand.id ~= 3280\n\tequipitem(3280, 'rhand') wait(200, 300)\nelseif $rhand.id == 3280\n\tequipitem(7386, 'rhand')\nend",
		"exDescription": "Each second, will equip a item with id 3280 (fire sword) if you're attacking a Ghost and doesn't have one equipped already. Else, it will equip a item with id 7386 (mercenary sword)."
	},
	{
		"rettype": null,
		"name": "higherwindows",
		"args": [
			{
				"type": "optional string",
				"name": "locationname"
			},
			{
				"type": "optional boolean",
				"name": "onlyone"
			}
		],
		"description": "Shows higher window of all windows that fit the description of <i>locationname</i>. If <i>locationname</i> is not specified, all windows are shown their higher window. If <i>onlyone</i> is specified as <i>true</i>, then the higher container is shown only once for one window.",
		"ex": "local firstBp = getcontainer(0)\nwhile firstBp.hashigher do\n\thigherwindows('0')\nend",
		"exDescription": "Will show the highest window of your first opened backpack."
	},
	{
		"rettype": null,
		"name": "minimizewindows",
		"args": [
			{
				"type": "optional string",
				"name": "locationname"
			},
			{
				"type": "optional boolean",
				"name": "onlyone"
			}
		],
		"description": "Minimizes all windows that fit the description of <i>locationname</i>. If <i>locationname</i> is not specified, all windows are minimized. If <i>onlyone</i> is specified as <i>true</i>, then only one matching window is minimized. You may specify 'equip' as <i>locationtype</i> to indicate that you want the equipment window minimized.",
		"ex": "minimizewindows('equip')",
		"exDescription": "Will minimize your equipment window."
	},
	{
		"rettype": null,
		"name": "moveitems",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "string",
				"name": "locationto"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "count"
			}
		],
		"description": "Moves all the items <i>itemname</i> to location described by <i>locationto</i>. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. This event will keep moving items as long as they are found in <i>locationfrom</i> and as long as the destination has space. Optionally, you can specify how many items to move by providing the <i>count</i> parameter. If you only want to move one item or one stack of items from the source location, set the <i>count</i> to 100.",
		"ex": "local depositItems = {'demon shield', 'fire axe'}\nfor _, item in ipairs(depositItems) do\n\tmoveitems(item, 'blue backpack', '1') wait(300, 500)\nend",
		"exDescription": "Will deposit all 'demon shields' and 'fire axes' to a 'blue backpack', as long as they are in your container of index 1."
	},
	{
		"rettype": null,
		"name": "moveitems",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "string",
				"name": "locationto"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "count"
			}
		],
		"alternative": true,
		"description": "Moves all items of id <i>itemid</i> to location described by <i>locationto</i>. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. This event will keep moving items as long as they are found in <i>locationfrom</i> and as long as the destination has space. Optionally, you can specify how many items to move by providing the <i>count</i> parameter. If you only want to move one item or one stack of items from the source location, set the <i>count</i> to 100.",
		"ex": "local depositItems = {3420, 3320}\nfor _, item in ipairs(depositItems) do\n\tmoveitems(item, '2', 'red backpack') wait(300, 500)\nend",
		"exDescription": "Will deposit all items of id 3420 (demon shield) or 3320 (fire axe) to your container of index 2, as long as they are in a 'red backpack'."
	},
	{
		"rettype": null,
		"name": "moveitemsonto",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "number",
				"name": "ontoid"
			},
			{
				"type": "optional number",
				"name": "index"
			},
			{
				"type": "optional string",
				"name": "locationto"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			}
		],
		"description": "Moves all items <i>itemname</i> on containers of id <i>ontoid</i>. Optionally, you can specify which container <i>index</i> to start putting items onto if you don't want it to try all the containers from the beginning. For this, you can pass <a href=\"lua-variables.html#$lastonto\">$lastonto</a> to start at the container that was found to be empty from the last operation. Optionally, you can specify the location of the containers of <i>ontoid</i> in the <i>locationonto</i> paramater if you don't want it to be all open windows. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. This event will keep moving items as long as they are found in <i>locationfrom</i> and as long as the destination containers have space.",
		"ex": "clearlastonto()\nmoveitemsonto('life ring', 2865, $lastonto, '2')\nclearlastonto()\nmoveitemsonto('energy ring', 5949, $lastonto, '3')",
		"exDescription": "Will move all 'life rings' on a container of id 2865 (green backpack) inside your container of index 2 and 'energy rings' on a container of id 5949 (beach backpack) inside your container of index 3."
	},
	{
		"rettype": null,
		"name": "moveitemsonto",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "number",
				"name": "ontoid"
			},
			{
				"type": "optional number",
				"name": "index"
			},
			{
				"type": "optional string",
				"name": "locationto"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			}
		],
		"alternative": true,
		"description": "Moves all items of id <i>itemid</i> on containers of id <i>ontoid</i>. Optionally, you can specify which container <i>index</i> to start putting items onto if you don't want it to try all the containers from the beginning. For this, you can pass <a href=\"lua-variables.html#$lastonto\">$lastonto</a> to start at the container that was found to be empty from the last operation. Optionally, you can specify the location of the containers of <i>ontoid</i> in the <i>locationonto</i> paramater if you don't want it to be all open windows. Optionally, you can specify a source for the items in <i>locationfrom</i> if you don't want it to be all open windows. This event will keep moving items as long as they are found in <i>locationfrom</i> and as long as the destination containers have space.",
		"ex": "clearlastonto()\nmoveitemsonto(3052, 2865, $lastonto, '2')\nclearlastonto()\nmoveitemsonto(3051, 5949, $lastonto, '3')",
		"exDescription": "Will move all items of id 3052 (life ring) on a container of id 2865 (green backpack) inside your container of index 2 and items of id 3051 (energy ring) on a container of id 5949 (beach backpack) inside your container of index 3."
	},
	{
		"rettype": null,
		"name": "openitem",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional boolean",
				"name": "opennew"
			},
			{
				"type": "optional number",
				"name": "index"
			}
		],
		"description": "Opens the item <i>itemname</i>. If you pass 0 for <i>itemid</i>, any openable item will be opened. You can optionally pass a location string for the <i>locationfrom</i> parameter to indicate where to look for the item to be opened if you don't want it to be looked for in all open windows. You can optionally pass <i>true</i> as the <i>opennew</i> parameter to indicate opening the item in a new window. You can also optionally specify which item to open in sequence by passing the <i>index</i> parameter (1st item, 2nd item... etc).",
		"ex": "openitem('bag', ground($posx, $posy - 1, $posz)) wait(300, 500)\neatfood()\nclosewindows('bag', true)",
		"exDescription": "Will open a 'bag' on the SQM north of you, eat food from it and close it."
	},
	{
		"rettype": null,
		"name": "openitem",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional boolean",
				"name": "opennew"
			},
			{
				"type": "optional number",
				"name": "index"
			}
		],
		"alternative": true,
		"description": "Opens item of id <i>itemid</i>. If you pass 0 for <i>itemid</i>, any openable item will be opened. You can optionally pass a location string for the <i>locationfrom</i> parameter to indicate where to look for the item to be opened if you don't want it to be looked for in all open windows. You can optionally pass <i>true</i> as the <i>opennew</i> parameter to indicate opening the item in a new window. You can also optionally specify which item to open in sequence by passing the <i>index</i> parameter (1st item, 2nd item... etc).",
		"ex": "openitem(0, ground($posx, $posy, $posz))\nmoveitems('magic plate armor', '0')",
		"exDescription": "Will open the container in the SQM you're standing and move all 'magic plate armors' inside to your container of index 0."
	},
	{
		"rettype": null,
		"name": "openitem",
		"args": [
			{
				"type": null,
				"name": "'depot'"
			}
		],
		"alternative": true,
		"description": "Opens a depot box next to you (since depots have different ids, this will make things easier).",
		"ex": "",
		"exDescription": ""
	},
	{
		"rettype": null,
		"name": "openbattlelist",
		"args": [
			{
				"type": "optional boolean",
				"name": "close"
			}
		],
		"description": "Opens the battle list. Optionally, you can pass the <i>close</i> parameter as <i>true</i> if you want to close the battle list instead.",
		"ex": "auto(2000)\nopenbattlelist()",
		"exDescription": "Each 2 segunds it will try to open the battle list (in case it's closed)."
	},
	{
		"rettype": null,
		"name": "reachgrounditem",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			}
		],
		"description": "Moves your character to stand next to the closest item of id <i>itemid</i> found on the screen.",
		"ex": "reachgrounditem(itemid('gold coin')) wait(300, 500)\nmoveitems('gold coin', '0', 'ground')",
		"exDescription": "Will reach a pile of 'gold coins' on the ground and pick it up."
	},
	{
		"rettype": null,
		"name": "reachgrounditem",
		"args": [
			{
				"type": null,
				"name": "'depot'"
			}
		],
		"alternative": true,
		"description": "Reaches the closest depot box (since depots have different ids, this will make things easier).",
		"ex": "reachgrounditem('depot')\nopenitem('depot')",
		"exDescription": "Will reach a depot and open it."
	},
	{
		"rettype": null,
		"name": "reopenwindows",
		"args": [
			{
				"type": "optional string",
				"name": "opentype"
			}
		],
		"description": "Asks the Open windows at login system to reopen your 'back' item and all openable items within. Optionally, you can specify 'open', 'minimized', 'small' as the <i>opentype</i> parameter to indicate the action to be performed after opening each container. This function returns immediately as it doesn't perform the events itself. To find out if the open backpacks system is currently opening windows, check the <a href=\"lua-variables.html#$openingbps\">$openingbps</a> variable.",
		"ex": "reopenwindows('small')\nwhile $openingbps do\n\twait(300, 500)\nend",
		"exDescription": "Will start opening your backpacks, resizing them to small, and wait until it's done."
	},
	{
		"rettype": null,
		"name": "resizewindows",
		"args": [
			{
				"type": "optional number",
				"name": "size"
			},
			{
				"type": "optional string",
				"name": "locationname"
			},
			{
				"type": "optional boolean",
				"name": "onlyone"
			}
		],
		"description": "Resizes all windows that fit the description of <i>locationname</i> to the specified <i>size</i> (can be 0/omitted to be as small as possible, or some big value to be as big as possible). If <i>locationname</i> is not specified, all windows are resized. If <i>onlyone</i> is specified as true, then only one matching window is resized.",
		"ex": "openitem(0, 'back')\nresizewindows(0, '0')",
		"exDescription": "Opens your 'back' item and resize it to the smallest possible size."
	},
	{
		"rettype": null,
		"name": "restorewindows",
		"args": [
			{
				"type": "optional string",
				"name": "locationname"
			},
			{
				"type": "optional boolean",
				"name": "onlyone"
			}
		],
		"description": "Restores all windows that fit the description of <i>locationname</i> from their minimized state. If <i>locationname</i> is not specified, all windows are restored. If <i>onlyone</i> is specified as true, then only one matching window is restored. You may specify 'equip' as <i>locationname</i> to indicate that you want the equipment window restored.",
		"ex": "restorewindows('equip')",
		"exDescription": "Will restore your equipment window."
	},
	{
		"rettype": null,
		"name": "sellitems",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "number",
				"name": "count"
			}
		],
		"description": "Sells <i>count</i> amount of items named <i>itemname</i>, which must be exactly the way it appears in the trade list. A trade window must be open.",
		"ex": "sellitems('plate armor', tradecount('sell', 'plate armor'))",
		"exDescription": "Will sell all your 'plate armors'."
	},
	{
		"rettype": null,
		"name": "sellitems",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "number",
				"name": "count"
			}
		],
		"alternative": true,
		"description": "Sells <i>count</i> amount of items with id <i>itemid</i>. A trade window must be open.",
		"ex": "while tradecount('sell', 285) > 100 do\n\tnpcsay('vial') wait(200, 300)\n\tnpcsay('yes') wait(200, 300)\nend\nsellitems(285, tradecount('sell', 285))",
		"exDescription": "Will get a lottery ticket for your vials while you have more than 100 of them. When it drops below that number, will sell the remaining vials."
	},
	{
		"rettype": null,
		"name": "useitem",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "optional string",
				"name": "locationitem"
			}
		],
		"description": "Uses the item <i>itemname</i> at location <i>locationitem</i>. If <i>locationitem</i> is not specified, the item is searched for in all open hotkeys which is pressed if one is found. Otherwise, it will be clicked in the inventory if present. If a location for the item is specified, the item is clicked on at the designated location if found. Optionally, you can pass an <i>index</i> parameter, so that you can specify exactly where in the backpack the item you want to click is located, this is useful to make change gold scripts, which are supported in most OTServers.",
		"ex": "useitem('torch', 'belt')",
		"exDescription": "Will light up a 'torch' on your belt slot."
	},
	{
		"rettype": null,
		"name": "useitem",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "optional string",
				"name": "locationitem"
			}
		],
		"alternative": true,
		"description": "Uses item of id <i>itemid</i> at location <i>locationitem</i>. If <i>locationitem</i> is not specified, the item is searched for in all open hotkeys which is pressed if one is found. Otherwise, it will be clicked in the inventory if present. If a location for the item is specified, the item is clicked on at the designated location if found. Optionally, you can pass an <i>index</i> parameter, so that you can specify exactly where in the backpack the item you want to click is located, this is useful to make change gold scripts, which are supported in most OTServers.",
		"ex": "useitem(0, ground($posx, $posy, $posz))",
		"exDescription": "Will use the top item in the SQM you're standing on. This could be a ladder, for example."
	},
	{
		"rettype": null,
		"name": "useitem",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "number",
				"name": "containerindex"
			},
			{
				"type": "number",
				"name": "itemindex"
			}
		],
		"alternative": true,
		"description": "Uses item of id <i>itemid</i> at container <i>containerindex</i> and at position <i>itemindex</i>. This is useful to make change gold scripts, which are supported in most OTServers.",
		"ex": "auto(200, 300)\nfor i=0,15 do\n\tlocal cont = getcontainer(i)\n\tfor j=1,cont.itemcount do\n\t\tif cont.item[j].count == 100 and (cont.item[j].id == 3035 or cont.item[j].id == 3031) then\n\t\t\t useitem(cont.item[j].id, i, j)\n\t\tend\n\tend\nend",
		"exDescription": "Will automatically use a full stack of gold when there is one. This is useful to make change gold scripts, which are supported in most OTServers."
	},
	{
		"rettype": null,
		"name": "useitemon",
		"args": [
			{
				"type": "number",
				"name": "idused"
			},
			{
				"type": "number",
				"name": "idusedon"
			},
			{
				"type": "optional string",
				"name": "locationusedon"
			},
			{
				"type": "optional string",
				"name": "locationused"
			}
		],
		"description": "Uses item with id <i>idused</i> on item with id <i>idusedon</i>, which can be 0 if its location is the ground. If you don't want the usedon item to be looked for in all open backpacks, you can specify its location in the string <i>locationusedon</i>. Same thing for the item being used except that you would do so in the string <i>locationused</i>.",
		"ex": "useitemon(itemid('rope'), 0, ground($posx, $posy, $posz))",
		"exDescription": "Will use a rope in the SQM you're standing on."
	},
	{
		"rettype": null,
		"name": "useitemon",
		"args": [
			{
				"type": "string",
				"name": "itemusedname"
			},
			{
				"type": "number",
				"name": "idusedon"
			},
			{
				"type": "optional string",
				"name": "locationusedon"
			},
			{
				"type": "optional string",
				"name": "locationused"
			}
		],
		"alternative": true,
		"description": "Uses the item <i>itemusedname</i> on item with id <i>idusedon</i>, which can be 0 if its location is the ground. If you don't want the usedon item to be looked for in all open backpacks, you can specify its location in the string <i>locationusedon</i>. Same thing for the item being used except that you would do so in the string <i>locationused</i>.",
		"ex": "useitemon('scythe', 0, ground($posx, $posy + 1, $podz))",
		"exDescription": "Will use a 'scythe' on the SQM south of you."
	},
	{
		"rettype": null,
		"name": "useoncreature",
		"args": [
			{
				"type": "string",
				"name": "itemname"
			},
			{
				"type": "creature",
				"name": "creaturepointer"
			}
		],
		"description": "Uses the item <i>itemname</i> on creature creature. If the item is found in a hotkey with an appropriate action, it will be pressed. Otherwise, it will be clicked in the inventory if present.",
		"ex": "useoncreature('mana potion', $followed)",
		"exDescription": "Will use a 'mana potion' on the creature you're following."
	},
	{
		"rettype": null,
		"name": "useoncreature",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "creature",
				"name": "creaturepointer"
			}
		],
		"alternative": true,
		"description": "Uses item of id <i>itemid</i> on creature creature. If the item is found in a hotkey with an appropriate action, it will be pressed. Otherwise, it will be clicked in the inventory if present.",
		"ex": "useoncreature(itemid('sudden death rune'), $target)",
		"exDescription": "Will use a 'sudden death rune' on your target."
	},
	{
		"rettype": null,
		"name": "writetext",
		"args": [
			{
				"type": "number",
				"name": "itemid"
			},
			{
				"type": "string",
				"name": "text"
			},
			{
				"type": "optional string",
				"name": "locationfrom"
			},
			{
				"type": "optional number",
				"name": "index"
			}
		],
		"description": "Opens item of id <i>itemid</i> for text editing and writes text <i>text</i> into it. To indicate a new line, use the following two characters: '\\n' (ex: 'Bubble\\nVenore'). You can optionally pass a location string for the <i>locationfrom</i> parameter to indicate where to look for the item to be opened if you don't want it to be looked for in all open windows. You can also optionally specify which item to open in sequence by passing the <i>index</i> parameter (1st item, 2nd item... etc).",
		"ex": "writetext(itemid('label'), 'Lord\\'Paulistinha\\nVenore')",
		"exDescription": "Will write 'Lord'Paulistinha\nVenore' in a 'label'."
	},
	{
		"rettype": "subtitle",
		"noIndex": true,
		"description": "Creature Events",
		"exDescription": "These functions issue an event related to creatures manipulation."
	},
	{
		"rettype": null,
		"name": "attack",
		"args": [
			{
				"type": "string",
				"name": "creaturename"
			}
		],
		"description": "Attacks a creature with name <i>creaturename</i>",
		"ex": "if $attacked.id == 0 then\n\tattack('Monk')\nend",
		"exDescription": "Will attack a 'Monk' if you are not currently attacking any creature."
	},
	{
		"rettype": null,
		"name": "attack",
		"args": [
			{
				"type": "number",
				"name": "creatureid"
			}
		],
		"alternative": true,
		"description": "Attacks a creature with id <i>creatureid</i>",
		"ex": "if $attacked.id == 0 then\n\tattack($target.id)\nend",
		"exDescription": "Will attack the last creature you have attacked if you lost its target."
	},
	{
		"rettype": null,
		"name": "attack",
		"args": [
			{
				"type": "creature",
				"name": "creaturepointer"
			}
		],
		"alternative": true,
		"description": "Attacks the creature <i>creaturepointer</i>",
		"ex": "if $attacked.id == 0 then\n\tforeach creature m 'ms' do\n\t\tattack(m) break\n\tend\nend",
		"exDescription": "Will attack the first creature it finds on the foreach iteration if you are not currently attacking any creature."
	},
	{
		"rettype": null,
		"name": "follow",
		"args": [
			{
				"type": "string",
				"name": "creaturename"
			}
		],
		"description": "Follows a creature with name <i>creaturename</i>",
		"ex": "if $followed.id == 0 then\n\tfollow('Bubble')\nend",
		"exDescription": "Will follow 'Bubble' if you are not currently following any creature."
	},
	{
		"rettype": null,
		"name": "follow",
		"args": [
			{
				"type": "number",
				"name": "creatureid"
			}
		],
		"alternative": true,
		"description": "Follows a creature with id <i>creatureid</i>",
		"ex": null,
		"exDescription": null
	},
	{
		"rettype": null,
		"name": "follow",
		"args": [
			{
				"type": "creature",
				"name": "creaturepointer"
			}
		],
		"alternative": true,
		"description": "Follows the creature <i>creaturepointer</i>",
		"ex": null,
		"exDescription": null
	},
	{
		"rettype": null,
		"name": "reachcreature",
		"args": [
			{
				"type": "string",
				"name": "creaturename"
			}
		],
		"description": "Will try to reach the creature with name <i>creaturename</i>",
		"ex": "reachcreature('Dove')\nsay('hi') wait(2000, 2500)\nnpcsay('trade')\nwait(1000, 1300)",
		"exDescription": "Will try to reach the creature named 'Dove', then say 'hi' and wait a while for the NPC Channel to open, and say 'trade'."
	},
	{
		"rettype": null,
		"name": "reachcreature",
		"args": [
			{
				"type": "number",
				"name": "creatureid"
			}
		],
		"alternative": true,
		"description": "Will try to reach the creature with id <i>creatureid</i>",
		"ex": null,
		"exDescription": null
	},
	{
		"rettype": null,
		"name": "reachcreature",
		"args": [
			{
				"type": "creature",
				"name": "creaturepointer"
			}
		],
		"alternative": true,
		"description": "Will try to reach the creature <i>creaturepointer</i>",
		"ex": null,
		"exDescription": null
	}
]]